{"version":3,"file":"component---src-pages-logout-js-f6d2c259ec4577e55c88.js","mappings":"8OAsJA,MAhJA,WACE,MAAM,EAACA,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,UAAS,CAC7CC,cAAc,EACdC,aAAa,EACbC,MAAO,QAEH,SAAEC,IAAaC,EAAAA,EAAAA,KAEfC,GAAgBC,EAAAA,EAAAA,cAAYC,UAChC,UACQC,EAAAA,EAAAA,MACNL,EAAS,CAAEM,KAAM,WACjBX,GAAeY,IAAI,IACdA,EACHT,aAAa,EACbD,cAAc,OAEhBW,EAAAA,EAAAA,IAAS,IACX,CAAE,MAAOT,GACPU,QAAQV,MAAM,gBAAiBA,GAC/BJ,GAAeY,IAAI,IACdA,EACHR,MAAOA,EAAMW,SAAW,mCACxBb,cAAc,KAElB,IACC,CAACG,IAEEW,GAAeR,EAAAA,EAAAA,cAAY,KAC/B,GAAIT,EAAYG,cAAgBH,EAAYI,YAAa,OAEzDH,GAAeY,IAAI,IAAUA,EAAMV,cAAc,EAAME,MAAO,SAG9D,MAAMa,EAAQC,YAAW,KACvBX,GAAe,GACd,MAEH,MAAO,IAAMY,aAAaF,EAAM,GAC/B,CAAClB,EAAYG,aAAcH,EAAYI,YAAaI,KAEvDa,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAkBH,YAAW,KAC5BnB,EAAYI,aAAgBJ,EAAYG,cAC3Cc,GACF,GACC,KAEH,MAAO,IAAMG,aAAaE,EAAgB,GACzC,CAACtB,EAAYI,YAAaJ,EAAYG,aAAcc,IAEvD,MAAMM,GAAed,EAAAA,EAAAA,cAAae,IAChCA,EAAEC,kBACFX,EAAAA,EAAAA,KAAU,EAAE,GACX,IAEH,OACE,uBAAKY,UAAU,yBACb,uBAAKA,UAAU,gCACb,uBAAKA,UAAU,kBACZ1B,EAAYK,MACX,uBAAKqB,UAAU,iBACb,uBAAKA,UAAU,cACb,uBAAKA,UAAU,sBAAqB,MAEtC,sBAAIA,UAAU,eAAc,iBAC5B,qBAAGA,UAAU,kBAAkB1B,EAAYK,OAC3C,uBAAKqB,UAAU,kBACb,0BAAQC,QAASV,EAAcS,UAAU,gBAAe,aAGxD,0BAAQC,QAASJ,EAAcG,UAAU,iBAAgB,YAK1D1B,EAAYI,YAyCf,uBAAKsB,UAAU,mBACb,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,wBAAuB,MAGxC,sBAAIA,UAAU,iBAAgB,2BAC9B,qBAAGA,UAAU,oBAAmB,2EA9ClC,gCACE,uBAAKA,UAAU,eACb,uBAAKA,UAAU,gBACZ1B,EAAYG,aACX,uBAAKuB,UAAU,mBAEf,OAKN,sBAAIA,UAAU,gBACX1B,EAAYG,aAAe,2BAA6B,YAE3D,qBAAGuB,UAAU,mBACV1B,EAAYG,aACT,4DACA,oDAIJH,EAAYG,cACZ,uBAAKuB,UAAU,kBACb,0BACEC,QAASV,EACTS,UAAU,wBACVE,SAAU5B,EAAYG,cACvB,kBAGD,0BACEwB,QAASJ,EACTG,UAAU,iBACX,qBAuBX,uBAAKA,UAAU,wBACb,uBAAKA,UAAU,6BACf,uBAAKA,UAAU,6BACf,uBAAKA,UAAU,+BAKzB,EC/Ie,SAASG,IACxB,OAAM,gBAAC,IAAc,KAAC,IAAC,gBAACC,EAAA,EAAU,KAC9B,gBAAC,EAAM,OAIX,C","sources":["webpack://gatsby-starter-hello-world/./src/components/Authentication/components/Logout.jsx","webpack://gatsby-starter-hello-world/./src/pages/logout.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, navigate } from 'gatsby';\nimport './Logout.css';\nimport { signOut } from '../../../hooks/useAuthService';\nimport { useGlobal } from '../../context/GlobalContext';\n\nfunction Logout() {\n  const [logoutState, setLogoutState] = useState({\n    isLoggingOut: false,\n    isLoggedOut: false,\n    error: null\n  });\n  const { dispatch } = useGlobal();\n\n  const performLogout = useCallback(async () => {\n    try {\n      await signOut();\n      dispatch({ type: \"LOGOUT\" });\n      setLogoutState(prev => ({\n        ...prev,\n        isLoggedOut: true,\n        isLoggingOut: false\n      }));\n      navigate('/');\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      setLogoutState(prev => ({\n        ...prev,\n        error: error.message || \"An error occurred during logout.\",\n        isLoggingOut: false\n      }));\n    }\n  }, [dispatch]);\n\n  const handleLogout = useCallback(() => {\n    if (logoutState.isLoggingOut || logoutState.isLoggedOut) return;\n    \n    setLogoutState(prev => ({ ...prev, isLoggingOut: true, error: null }));\n    \n    // Add slight delay for better UX (shows loading state)\n    const timer = setTimeout(() => {\n      performLogout();\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, [logoutState.isLoggingOut, logoutState.isLoggedOut, performLogout]);\n\n  useEffect(() => {\n    // Auto-initiate logout after component mounts\n    const autoLogoutTimer = setTimeout(() => {\n      if (!logoutState.isLoggedOut && !logoutState.isLoggingOut) {\n        handleLogout();\n      }\n    }, 1000);\n\n    return () => clearTimeout(autoLogoutTimer);\n  }, [logoutState.isLoggedOut, logoutState.isLoggingOut, handleLogout]);\n\n  const handleCancel = useCallback((e) => {\n    e.preventDefault();\n    navigate(-1); // Go back to previous page\n  }, []);\n\n  return (\n    <div className=\"logout-container-main\">\n      <div className=\"logout-card logout-container\">\n        <div className=\"logout-content\">\n          {logoutState.error ? (\n            <div className=\"error-message\">\n              <div className=\"error-icon\">\n                <div className=\"icon-wrapper error\">!</div>\n              </div>\n              <h2 className=\"error-title\">Logout Failed</h2>\n              <p className=\"error-subtitle\">{logoutState.error}</p>\n              <div className=\"logout-actions\">\n                <button onClick={handleLogout} className=\"retry-button\">\n                  Try Again\n                </button>\n                <button onClick={handleCancel} className=\"cancel-button\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          ) : !logoutState.isLoggedOut ? (\n            <>\n              <div className=\"logout-icon\">\n                <div className=\"icon-wrapper\">\n                  {logoutState.isLoggingOut ? (\n                    <div className=\"logout-spinner\"></div>\n                  ) : (\n                    'ðŸ‘‹'\n                  )}\n                </div>\n              </div>\n              \n              <h2 className=\"logout-title\">\n                {logoutState.isLoggingOut ? 'Securing Your Session...' : 'Goodbye!'}\n              </h2>\n              <p className=\"logout-subtitle\">\n                {logoutState.isLoggingOut \n                  ? 'We\\'re securely ending your session and clearing all data.'\n                  : 'You are about to be logged out of your account.'\n                }\n              </p>\n\n              {!logoutState.isLoggingOut && (\n                <div className=\"logout-actions\">\n                  <button \n                    onClick={handleLogout} \n                    className=\"confirm-logout-button\"\n                    disabled={logoutState.isLoggingOut}\n                  >\n                    Confirm Logout\n                  </button>\n                  <button \n                    onClick={handleCancel} \n                    className=\"cancel-button\"\n                  >\n                    Stay Logged In\n                  </button>\n                </div>\n              )}\n            </>\n          ) : (\n            <div className=\"success-message\">\n              <div className=\"success-icon\">\n                <div className=\"icon-wrapper success\">âœ“</div>\n              </div>\n              \n              <h2 className=\"success-title\">Successfully Logged Out</h2>\n              <p className=\"success-subtitle\">\n                Thank you for using our service. Your session has been securely ended.\n              </p>\n              \n              \n            </div>\n          )}\n        </div>\n\n        {/* Background Animation */}\n        <div className=\"background-animation\">\n          <div className=\"floating-circle circle-1\"></div>\n          <div className=\"floating-circle circle-2\"></div>\n          <div className=\"floating-circle circle-3\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Logout;","import * as React from \"react\"\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport { GlobalProvider } from \"../components/context/GlobalContext\";\nimport Logout from \"../components/Authentication/components/Logout\";\nexport default function SingleProduct() {\nreturn<GlobalProvider> <MainLayout > \n    <Logout/>\n\n  </MainLayout>\n  </GlobalProvider>\n}"],"names":["logoutState","setLogoutState","useState","isLoggingOut","isLoggedOut","error","dispatch","useGlobal","performLogout","useCallback","async","signOut","type","prev","navigate","console","message","handleLogout","timer","setTimeout","clearTimeout","useEffect","autoLogoutTimer","handleCancel","e","preventDefault","className","onClick","disabled","SingleProduct","MainLayout"],"sourceRoot":""}